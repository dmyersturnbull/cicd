# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to CICD
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/cicd
# SPDX-License-Identifier: Apache-2.0

name: Deploy packages

on:
  push:
    tags:
      - '^v[0-9]+\.[0-9]+\.[0-9]+(?:[.+-].+)?$'

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: false

permissions:
  contents: write
  id-token: write
  packages: write

jobs:

  publish-github-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          token: ${{ secrets.github_token }}
          files: dist/*

  publish-pypi:
    name: Publish to PyPi
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Install hatch
        run: pip install 'hatch~=1.12'
      - name: Publish to PyPi
        run: hatch publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        if: ${{ secrets.PYPI_TOKEN != '' }}

  publish-docker:
    name: Publish to Docker container registries
    needs: bump
    runs-on: ubuntu-latest
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ secrets.DOCKERHUB_USERNAME != '' }}
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
      - name: Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.docker-meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${{ env.TAGS }}" | xargs -I {} cosign sign --yes {}@${{ env.DIGEST }}
