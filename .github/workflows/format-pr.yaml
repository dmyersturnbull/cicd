# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

name: format-pr
run-name: ${{ github.workflow }} for ${{ github.ref_name }}
on:
  merge_group:
    types:
      - checks_requested

jobs:
  format:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: astral-sh/setup-uv@v2

      - name: Set up Python
        run: uv python install '3.12'

      - name: Run Ruff format
        # Format Python
        run: |
          uv install 'ruff >=0.6.9'
          ruff format .

      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Run Prettier
        # for Python projects, we're mostly formatting YAML and Markdown
        run: |
          npm install --global prettier '>=3.0.0'
          prettier --write .

      # Compress images
      - name: Compress Images
        uses: calibreapp/image-actions@v1
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          compressOnly: true # don't commit

      - name: Run pre-commit hooks
        # do not continue on error because we should already be formatted
        # (from ruff format and prettier steps earlier)
        # we're mostly checking the other things, like that shebangs are executable
        run: |
          pre-commit run --all-files

      - name: Commit formatting changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "style: auto-format" || echo "No changes found."

      - name: Update UV lock file
        run: |
          uv lock
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add uv.lock
          git commit -m "build: update uv lock file" || echo "No changes found."

      - name: Force-push changes
        if: success() && steps.commit.outputs.commit != ''
        run: |
          # --force should be fine here, too, but --force-with-lease feels safer
          git push origin HEAD:${{ github.ref }} --force-with-lease
