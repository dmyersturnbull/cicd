name: Validate PR metadata

on:
  pull_request:
    types:
      - ready_for_review
      - edited
  issue_comment:
    types:
      - created

jobs:
  commitizen-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Commitizen
        run: pip install commitizen~=3.27

      - name: Check if comment contains /please-check-pr-metadata
        if: github.event_name == 'issue_comment'
        id: check_comment
        run: |
          exit [[ "${{ github.event.comment.body }}" == *"/please-check-pr-metadata"* ]]

      - name: Get linked issues for PR
        if: >
          github.event_name == 'pull_request'
          || steps.check_comment.outcome == 'success'
        id: get_linked_issues
        run: |
          QUERY='query($repository: String!, $owner: String!, $number: Int!) {
            repository(name: $repository, owner: $owner) {
              pullRequest(number: $number) {
                closingIssuesReferences(first: 100) {
                  totalCount
                  nodes {
                    number
                  }
                }
              }
            }
          }'
          response=$( \
            gh api graphql \
              -f query="$QUERY" \
              -f repository="${{ github.event.repository.name }}" \
              -f owner="${{ github.repository_owner }}" \
              -f number="${{ github.event.pull_request.number }}" \
          )
          echo "$response" \
          | jq \
            --raw-output \
            -r '.data.repository.pullRequest.closingIssuesReferences.nodes[].number' \
          > issues.lines

      - name: Check for exactly one linked issue
        if: github.event_name == 'pull_request' || steps.check_comment.outcome == 'success'
        run: |
          issue_count=$(wc -l issues.lines)
          issues=$(cat issues.txt)
          if [[ "$issue_count" -ne 1 ]]; then
            echo "There must be exactly one linked issue. Found $issue_count issues: $issues"
            exit 1
          fi

      - name: Validate commit message with Commitizen
        run: |
          commit_message=$(jq -r '.pull_request.title' "$GITHUB_EVENT_PATH")
          commit_body=$(jq -r '.pull_request.body' "$GITHUB_EVENT_PATH")
          commit_message="$commit_message \n\n$commit_body"
          echo "$commit_message" | cz check || exit 1
