# SPDX-FileCopyrightText: Copyright 2020-2025, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

# "Function" workflow that runs formatters and auto-fixers, commits, and pushes the changes.
run-name: >-
  Reformat ${{ inputs.compare-to-ref && 'diff' || 'all' }}
  on ${{ inputs.ref || 'Îµ' }}

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
        description: The branch, tag, or hash; for a PR, this should be the head or its current hash.
      compare-to-ref:
        type: string
        required: true
        description: >-
          If set, only run on files modified since this commit; otherwise, runs on all files.
          For a PR, this should be the base hash (last commit before the PR branch).

concurrency:
  group: _reformat / ${{ inputs.ref }}
  # Never cancel a currently running job.
  # There's no reliable way to determine when it's safe to cancel (even using `compare-to-ref`).
  # It's CRITICAL that we only allow one to run per ref at a time to avoid merge conflicts.

env:
  FROM_REF: ${{ inputs.compare-to-ref }}
  TO_REF: ${{ inputs.ref }}

defaults:
  run:
    shell: bash

jobs:
  reformat:
    if: ${{ ! env.FROM_REF }}
    name: Reformat and auto-fix modified files
    runs-on: ubuntu-latest
    env:
      # For historical reasons, the GH CLI uses GH_TOKEN instead of GITHUB_TOKEN
      # https://github.com/github/docs/issues/21930
      GH_TOKEN: ${{ github.token }}
      UV_NO_SYNC: true

    steps:
      #
      # ==== Set up Git and fetch the needed refs ====
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Fetch PR's HEAD (not merge commit)
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TO_REF }}
      - if: ${{ ! env.FROM_REF }}
        name: Fetch base commit for comparison
        run: |
          git fetch --no-tags --depth=1 origin $FROM_REF
      - uses: astral-sh/setup-uv@v6
      - run: |
          uv sync --locked --only-group precommit
      #
      # ==== Auto-fix Ruff rule violations ====
      - if: ${{ ! env.FROM_REF }}
        name: Run Ruff auto-fix on all files
        run: |
          uv run pre-commit run ruff-check --all-files
      - if: ${{ env.FROM_REF }}
        name: Run Ruff autofix on modified files
        run: |
          uv run pre-commit run ruff-check --from-ref $FROM_REF --to-ref $TO_REF
      - name: Check for Ruff autofix changes
        id: autofix
        run: |
          git diff --quiet . || echo "has-changes=true" >> $GITHUB_OUTPUT
      - if: ${{ steps.autofix.outputs.has-changes }}
        name: Commit Ruff auto-fix
        run: |
          git add -A
          git commit -m "fix: auto-fix lint violations"
      #
      # ==== Auto-fix Ruff rule violations ====
      - if: ${{ ! env.FROM_REF }}
        name: Reformat all files
        run: |
          uv run pre-commit run ruff-format --all-files || true
          uv run pre-commit run prettier --all-files || true
      - if: ${{ env.FROM_REF }}
        name: Reformat modified files
        run: |
          uv run pre-commit run ruff-format --from-ref $FROM_REF --to-ref $TO_REF || true
          uv run pre-commit run prettier --from-ref $FROM_REF --to-ref $TO_REF || true
      - name: Check for formating changes
        id: reformat
        run: |
          git diff --quiet . || echo "changes=true" >> $GITHUB_OUTPUT
      - if: ${{ steps.reformat.outputs.has-changes }}
        name: Commit changes
        run: |
          git add -A
          git commit -m "style: auto-fix lint violations and autoformat"
      #
      # ==== Push changes ====
      - if: ${{ steps.autofix.outputs.has-changes || steps.reformat.outputs.has-changes }}
        name: Push changes
        run: |
          git push
