# SPDX-FileCopyrightText: Copyright 2020-2025, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

# "Function" workflow: that uploads `dist/` as GH workflow artifact `dist-${{ github.ref_name }}`.
run-name: Package ${{ inputs.ref || 'Îµ' }}

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
        description: The branch, tag, or hash; for testing a PR, this should be the merge commit.
      cancel-in-progress:
        type: boolean
        description: >-
          Cancel already-running runs for the same ref.
          Enable for ad-hoc checks, but keep disabled otherwise.
          This is important if 'ref' is an "abbreviated ref" rather than a hash.
      retention-days:
        type: number
        default: 1
        description: If > 0, uploads the zip file as GitHub artifact 'dist-<REF>' with this retention time.
      use-uv-sources:
        type: boolean
        default: false
        description: Use 'tool.uv.sources'; otherwise, passes '--no-sources' to 'uv build'.

concurrency:
  group: _build-dist / ${{ inputs.ref }}
  cancel-in-progress: ${{ inputs.cancel-in-progress }}

env:
  ARTIFACT_NAME: dist-${{ inputs.ref-name }}
  UV_BUILD_OPTIONS: ${{ inputs.use-uv-sources && '' || '--no-sources' }}

defaults:
  run:
    shell: bash

jobs:
  build-dist:
    runs-on: ubuntu-latest
    steps:
      - id: ref-name
        run: |
          ref_name="${{ inputs.ref }}"
          ref_name="${ref_name#refs/heads/}"
          ref_name="${ref_name#refs/tags/}"
          echo "ref_name=$ref_name" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: astral-sh/setup-uv@v6
      - name: Build sources and wheels
        run: |
          # shellcheck disable=SC2086 # Intentionally word-split into an array.
          read -r -a uv_build_options <<< "$UV_BUILD_OPTIONS"
          uv build "${uv_build_options[@]}"
      - if: ${{ inputs.retention-days > 0 }}
        name: Upload 'dist/' (wheels and sdists) as artifact '${{ env.ARTIFACT_NAME }}'
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ steps.ref-name.outputs.ref_name }}
          path: dist/
          if-no-files-found: error
          compression-level: 0 # they're already gzip-compressed
          retention-days: ${{ inputs.retention-days }}
      - name: Print artifact info
        env:
          ARTIFACT_ID: "${{ steps.upload.outputs.artifact-id }}"
          ARTIFACT_URL: "${{ steps.upload.outputs.artifact-url }}"
          ARTIFACT_DIGEST: "${{ steps.upload.outputs.artifact-digest }}"
        run: |
          printf \
            "Uploaded artifact '%s':\n  ID: %s\nURI: %s\nDigest: %s\n" \
            "$ARTIFACT_NAME \
            "$ARTIFACT_ID" \
            "$ARTIFACT_URL" \
            "$ARTIFACT_DIGEST"
