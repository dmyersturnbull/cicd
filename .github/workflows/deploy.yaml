# SPDX-FileCopyrightText: Copyright 2020-2023, Contributors to CICD
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/cicd
# SPDX-License-Identifier: Apache-2.0

name: deploy

on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        required: true
        description: Pre-release type
        options:
          - alpha
          - beta
          - rc
          - main

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: false

permissions:
  contents: write
  issues: write
  discussions: write
  packages: write
  pages: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.
  id-token: write

jobs:
  bump:
    runs-on: ubuntu-latest
    name: Bump version and create changelog with commitizen
    steps:
      - uses: actions/checkout@v3
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - id: cz-prerelease
        name: Create bump and changelog (prerelease)
        if: ${{ github.event.inputs.type }} == 'main'
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          gpg_sign: true
      - id: cz-prerelease
        name: Create bump and changelog (prerelease)
        if: github.event.inputs.type != 'main'
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          gpg_sign: true
          prerelease: ${{ github.event.inputs.type }}
      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"

  deploy-packages:
    needs: [bump]
    uses: .github/workflows/deploy-packages.yaml

  deploy-docs:
    needs: [bump]
    uses: .github/workflows/deploy-docs.yaml

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [pypi-publish, docker-publish, pages]
    if: ${{ !cancelled() && SLACK_WEBHOOK != '' }}
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job_status }}
          SLACK_LINK_NAMES: true
          MSG_MINIMAL: true
