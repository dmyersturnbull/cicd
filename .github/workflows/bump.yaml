# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to CICD
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/cicd
# SPDX-License-Identifier: Apache-2.0

name: Release

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      prerelease:
        type: choice
        required: true
        description: Pre-release type
        options:
          - alpha
          - beta
          - rc
          - stable

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: false

permissions:
  contents: write

env:
  prerelease: ${{
    github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease
    || github.event.head_commit.message
    }}

jobs:
  bump:
    name: Bump version and create changelog with commitizen
    if: "github.event_name == 'workflow_dispatch' || startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - if: "${{ github.event_name == 'workflow_dispatch' }}"
        run: echo "prerelease=${{ github.event.inputs.prerelease }}" >> $GITHUB_ENV
      - if: "${{ github.event.head_commit.message == 'bump: alpha' }}"
        run: echo "prerelease=alpha" >> $GITHUB_ENV
      - if: "${{ github.event.head_commit.message == 'bump: beta' }}"
        run: echo "prerelease=beta" >> $GITHUB_ENV
      - if: "${{ github.event.head_commit.message == 'bump: rc' }}"
        run: echo "prerelease=rc" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Import GPG key
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - id: cz-release
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.PAT }}
          git_name: ${{ steps.gpg.outputs.name }}
          git_email: ${{ steps.gpg.outputs.email }}
          gpg_sign: true
          prerelease: ${{ prerelease }}

          debug: true
      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"
