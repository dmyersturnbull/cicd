# SPDX-FileCopyrightText: Copyright 2020-2024, Contributors to Tyrannosaurus
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyrannosaurus
# SPDX-License-Identifier: Apache-2.0

# Updates the code coverage reports and sends them to Coveralls and/or Codecov.
# Coveralls can be disabled by setting "if: false"
# Codecov can be disabled the same way
# Codecov needs secret CODECOV_TOKEN which Codecov will provide
# It is triggered by pushes to the main branch and release branches.
# Generates and sends reports for multiple OSes and Python versions.

name: Update coverage
run-name: ${{ github.workflow }} on ${{ github.ref_name }}

on:
  push:
    branches:
      - main
      - master
      - 'releases/**'

permissions:
  contents: write
  statuses: write
  actions: write
  security-events: write

concurrency:
  group: >
    ${{ github.workflow }}\
    -${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:

  # This job runs the tests and generates coverage reports.
  test:
    uses: ./.github/workflows/_test.yaml
    secrets: inherit

  send-to-coveralls:
    name: Send reports to Coveralls
    needs: test
    if: true # Change this if you don't want to use Coveralls
    strategy:
      # we can use a matrix to send OS-specific and Python-version-specific coverage data
      matrix:
        os:
          - ubuntu-latest
        python:
          - '3.12'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Determine whether this is the last report.
        id: last-report
        shell: bash
        run: |
          echo "is_last_report=(( ${{ strategy.job-index }} == ${{ strategy.job-total }} - 1 ))" \
          >> "${GITHUB_OUTPUT}"
      - name: Download coverage artifact for ${{ matrix.os }} / Python ${{ matrix.python }}
        uses: actions/download-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python }}
      - name: Send coverage report for "${{ matrix.os }}-${{ matrix.python }}" to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          flag-name: run-${{ matrix.os }}-py${{ matrix.python }}
          parallel: true
          parallel-finished: ${{ env.is_last_report }}

  send-to-codecov:
    name: Send reports to codecov
    needs: test
    if: true
    continue-on-error: true
    #if: !cancelled()
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python:
          - '3.12'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Send coverage report for ${{ matrix.os }}-${{ matrix.python }} to Codecov
        uses: codecov/codecov-action@v3
        with:
          env_vars: matrix.os,matrix.python
          fail_ci_if_error: true

  finalize-codecov-send:
    # This job sends final data to Coveralls to mark the parallel runs as finished.
    # Will not run if the 'send-to-codecov' job was not cancelled
    needs: send-to-codecov
    continue-on-error: true
    #if: !cancelled()
    runs-on: ubuntu-latest
    steps:
      - name: Send final data to Coveralls to mark the set completed
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          file: coverage.json
